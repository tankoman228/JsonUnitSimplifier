{
  "id": "No id, I am lazy",
  "mode": "fields",
  "combination_mode": "simple",
  "classes": [
    "JsonUnitSimplifier__UNIT_TESTS_FOR_LIBRARY.TestedObject,JsonUnitSimplifier__UNIT_TESTS_FOR_LIBRARY",
    "JsonUnitSimplifier__UNIT_TESTS_FOR_LIBRARY.TestedService,JsonUnitSimplifier__UNIT_TESTS_FOR_LIBRARY",
    "JsonUnitSimplifier__UNIT_TESTS_FOR_LIBRARY.TestedRepositoryMock,JsonUnitSimplifier__UNIT_TESTS_FOR_LIBRARY",
    "Add"
  ],
  "rules": [
    {
      "field": "FieldInt",
	    "field_type": "System.Int32",
      "values": [ 1, 2, 3, 4, 5 ]
    },
    {
      "field": "FieldFloat",
	    "field_type": "System.Single",
      "value": -23.2
    },
    {
      "field": "FieldDouble",
      "range": [ 1, 5 ],
      "step": 1
    },
    {
      "field": "FieldString",
      "value": "created"
    }
  ],
  "assert_before_lambda": [
  {
	"function": "GetSecret",
	"target": "objects",
	"type_assert": "equals",
	"args": [],
	"result": null
  },
  {
	"method": "SetSecret",
	"target": "objects",
	"args": ["hi-hi"]	
  },
  {
	"function": "GetSecret2",
	"args": [2],
	"type_assert": "equals",
	"target": "objects",
	"results": ["1hi-hi!!!2", "2hi-hi!!!2", "3hi-hi!!!2", "4hi-hi!!!2", "5hi-hi!!!2"]	
  }
  ,
  {
	"function": "GetSecret2",
	"args": [2],
	"type_assert": "equals",
	"target": "objects",
	"results": ["1hi-hi!!!2", "2hi-hi!!!2", "3hi-hi!!!2", "4hi-hi!!!2", "5hi-hi!!!2"]	
  }
  ],
  "assert_after_lambda": [
  {
	"function": "Len",
	"args": [],
	"type_assert": "equals",
	"target": "service",
	"result": 5	
  },
  {
	"function": "GetDouble",
	"args": [],
	"type_assert": "equals",
	"target": "service-to-object",
	"results": [1, 2, 3, 4, 5, 0]	
  }
  ]
}